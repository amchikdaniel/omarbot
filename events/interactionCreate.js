const { Events, ModalBuilder, TextInputBuilder, ActionRowBuilder,TextInputStyle } = require('discord.js');

module.exports = {
    name: Events.InteractionCreate,
    async execute(interaction) {
        if (interaction.isChatInputCommand()) {
            const command = interaction.client.commands.get(interaction.commandName);

            if (!command) {
                console.error(`No command matching ${interaction.commandName} was found.`);
                return;
            }

            try {
                await command.execute(interaction);
            } catch (error) {
                console.error(`Error executing ${interaction.commandName}`);
                console.error(error);
            }

        } else if (interaction.isButton()) {
            if (interaction.customId === "modalbutton") {
                const modalpenis = new ModalBuilder()
                    .setCustomId('modalpenis')
                    .setTitle('–ü—Ä–∏–º–µ—Ä –º–æ–¥–∞–ª–∏');

                const usersname = new TextInputBuilder()
                    .setCustomId('sendername')
                    .setLabel("–í–∞—à–µ –∏–º—è")
                    .setStyle(TextInputStyle.Short)
                    .setMaxLength(15)
                    .setPlaceholder('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
                    .setRequired(true);

                const shortAnswer = new TextInputBuilder()
                    .setCustomId('shortansw')
                    .setLabel("–ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç")
                    .setStyle(TextInputStyle.Short)
                    .setRequired(false);

                const longAnswer = new TextInputBuilder()
                    .setCustomId('longansw')
                    .setLabel("–î–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
                    .setStyle(TextInputStyle.Paragraph)
                    .setRequired(false);

                const customSettings = new TextInputBuilder()
                    .setCustomId('customset')
                    .setLabel('–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ –ø–æ–ª–µ')
                    .setStyle(TextInputStyle.Paragraph)
                    .setMaxLength(1000)
                    .setMinLength(3)
                    .setPlaceholder('–ü–æ–ª–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è)')
                    .setRequired(true);


                const actualFirstActionRow = new ActionRowBuilder().addComponents(usersname);
                const firstActionRow = new ActionRowBuilder().addComponents(shortAnswer);
                const secondActionRow = new ActionRowBuilder().addComponents(longAnswer);
                const thirdActionRow = new ActionRowBuilder().addComponents(customSettings);


                modalpenis.addComponents(actualFirstActionRow, firstActionRow, secondActionRow, thirdActionRow);

                await interaction.showModal(modalpenis);
            }
            if (interaction.customId === "appYes") {
                const appModal = new ModalBuilder()
                    .setCustomId('appModal')
                    .setTitle('–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏');

                const appName = new TextInputBuilder()
                    .setCustomId('appName')
                    .setLabel("–í–∞—à–µ –∏–º—è")
                    .setStyle(TextInputStyle.Short)
                    .setMaxLength(15)
                    .setPlaceholder('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
                    .setRequired(true);

                const appAge = new TextInputBuilder()
                    .setCustomId('appAge')
                    .setLabel("–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
                    .setStyle(TextInputStyle.Short)
                    .setRequired(true);

                const appCity = new TextInputBuilder()
                    .setCustomId('appCity')
                    .setLabel("–í–∞—à –≥–æ—Ä–æ–¥")
                    .setStyle(TextInputStyle.Short)
                    .setRequired(true);

                const appCandidature = new TextInputBuilder()
                    .setCustomId('appCandidature')
                    .setLabel("–í–∞—à–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä–∞")
                    .setStyle(TextInputStyle.Paragraph)
                    .setRequired(true);



                const actualFirstActionRow = new ActionRowBuilder().addComponents(appName);
                const firstActionRow = new ActionRowBuilder().addComponents(appAge);
                const secondActionRow = new ActionRowBuilder().addComponents(appCity);
                const thirdActionRow = new ActionRowBuilder().addComponents(appCandidature);


                appModal.addComponents(actualFirstActionRow, firstActionRow, secondActionRow, thirdActionRow);

                await interaction.showModal(appModal);
            }
        } else if (interaction.isStringSelectMenu()) {
            if (interaction.values[0] === 'sloykawithraspberry') {
                interaction.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ üçì **–°–ª–æ–π–∫—É —Å –º–∞–ª–∏–Ω–æ–π!**`)
            }

        } else if (interaction.isModalSubmit()) {
            if (interaction.customId === 'modalpenis') {
                const sender = interaction.fields.getTextInputValue('sendername')
                const shortan = interaction.fields.getTextInputValue('shortansw');
                const longan = interaction.fields.getTextInputValue('longansw');
                const setan = interaction.fields.getTextInputValue('customset');

                interaction.reply(`–ò–º—è: ${sender}\n–í–∞—à –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç: ${shortan}\n–í–∞—à –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: ${longan}\n–í–∞—à —Ç—Ä–µ—Ç–∏–π –æ—Ç–≤–µ—Ç: ${setan}`)
            }
            if (interaction.customId === 'appModal') {
                const userName = interaction.fields.getTextInputValue('appName')
                const userAge = interaction.fields.getTextInputValue('appAge')
                const userCity = interaction.fields.getTextInputValue('appCity')
                const userCandidature = interaction.fields.getTextInputValue('appCandidature')

                interaction.reply(`–í—ã ${userName} –∏–∑ –≥–æ—Ä–æ–¥–∞ ${userCity}. –í–∞–º ${userAge} –ª–µ—Ç. –í–∞—à–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä–∞: \`\`\`${userCandidature}\`\`\``)
            }
        }
    },
};